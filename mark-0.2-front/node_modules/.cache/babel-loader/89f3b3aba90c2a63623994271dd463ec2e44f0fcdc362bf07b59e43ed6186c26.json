{"ast":null,"code":"var _jsxFileName = \"/Users/lesedimalapile/Downloads/mark-0.2/mark-0.2-front/src/pages/Premium.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Premium() {\n  _s();\n  const navigate = useNavigate();\n  const [referenceText, setReferenceText] = useState(\"\");\n  const [generatedPassword, setGeneratedPassword] = useState(\"\");\n  const [copyMessage, setCopyMessage] = useState(\"\");\n\n  // Check for login token on component load\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      // If no token, redirect to login\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // This effect re-generates the password whenever the reference text changes\n  useEffect(() => {\n    if (referenceText.length > 0) {\n      generatePassword(referenceText);\n    } else {\n      setGeneratedPassword(\"\"); // Clear password if input is empty\n    }\n  }, [referenceText]);\n\n  // Leetspeak mapping\n  const leetMap = {\n    a: \"4\",\n    e: \"3\",\n    i: \"1\",\n    o: \"0\",\n    s: \"5\",\n    t: \"7\"\n  };\n\n  // Function to generate the password from reference text\n  const generatePassword = text => {\n    let newPass = \"\";\n    // 1. Apply Leetspeak\n    for (let char of text.toLowerCase()) {\n      newPass += leetMap[char] || char;\n    }\n    // 2. Capitalize the first letter\n    if (newPass.length > 0) {\n      newPass = newPass.charAt(0).toUpperCase() + newPass.slice(1);\n    }\n    // 3. Remove spaces\n    newPass = newPass.replace(/\\s/g, \"\");\n    // 4. Append a common symbol and the current year\n    const currentYear = new Date().getFullYear();\n    newPass += `!${currentYear}`;\n    setGeneratedPassword(newPass);\n    setCopyMessage(\"\"); // Reset copy message\n  };\n\n  // Function to copy password to clipboard\n  const copyToClipboard = () => {\n    if (!generatedPassword) return;\n    navigator.clipboard.writeText(generatedPassword);\n    setCopyMessage(\"Copied! ✅\");\n    setTimeout(() => setCopyMessage(\"\"), 2000);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\"); // clear token\n    navigate(\"/\"); // redirect to home\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 24,\n      fontFamily: \"system-ui, -apple-system, Segoe UI, Roboto, sans-serif\",\n      maxWidth: 600,\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Premium: RefGenPass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: {\n          padding: \"8px 12px\",\n          background: \"#dc2626\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 6,\n          cursor: \"pointer\",\n          height: \"fit-content\"\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#6b7280\"\n      },\n      children: \"Enter a memorable phrase to generate a consistent, strong password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reference\",\n        style: {\n          display: \"block\",\n          marginBottom: 6,\n          fontWeight: 500\n        },\n        children: \"Your Reference Phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"reference\",\n        type: \"text\",\n        value: referenceText,\n        onChange: e => setReferenceText(e.target.value),\n        placeholder: \"e.g., My dog's name is Buddy\",\n        style: {\n          width: \"100%\",\n          boxSizing: \"border-box\",\n          padding: \"12px\",\n          border: \"1px solid #e5e7eb\",\n          borderRadius: 6,\n          fontSize: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          marginBottom: 6,\n          fontWeight: 500\n        },\n        children: \"Generated Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: generatedPassword,\n          readOnly: true,\n          placeholder: \"Your password will appear here\",\n          style: {\n            flexGrow: 1,\n            padding: \"10px 12px\",\n            border: \"1px solid #e5e7eb\",\n            borderRadius: 6,\n            fontSize: 16,\n            background: \"#f9fafb\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyToClipboard,\n          style: {\n            padding: \"10px 16px\",\n            background: \"#2563eb\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: 6,\n            cursor: \"pointer\"\n          },\n          children: copyMessage ? copyMessage : \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      style: {\n        color: \"#2563eb\",\n        display: \"inline-block\",\n        marginTop: 24\n      },\n      children: \"\\u2190 Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Premium, \"AvesGBX5MVIXFgDDSwdM/FyMwdU=\", false, function () {\n  return [useNavigate];\n});\n_c = Premium;\nvar _c;\n$RefreshReg$(_c, \"Premium\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","jsxDEV","_jsxDEV","Premium","_s","navigate","referenceText","setReferenceText","generatedPassword","setGeneratedPassword","copyMessage","setCopyMessage","token","localStorage","getItem","length","generatePassword","leetMap","a","e","i","o","s","t","text","newPass","char","toLowerCase","charAt","toUpperCase","slice","replace","currentYear","Date","getFullYear","copyToClipboard","navigator","clipboard","writeText","setTimeout","handleLogout","removeItem","style","padding","fontFamily","maxWidth","margin","children","display","justifyContent","alignItems","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","color","border","borderRadius","cursor","height","marginBottom","htmlFor","fontWeight","id","type","value","onChange","target","placeholder","width","boxSizing","fontSize","gap","readOnly","flexGrow","to","_c","$RefreshReg$"],"sources":["/Users/lesedimalapile/Downloads/mark-0.2/mark-0.2-front/src/pages/Premium.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nexport default function Premium() {\n  const navigate = useNavigate();\n  const [referenceText, setReferenceText] = useState(\"\");\n  const [generatedPassword, setGeneratedPassword] = useState(\"\");\n  const [copyMessage, setCopyMessage] = useState(\"\");\n\n  // Check for login token on component load\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      // If no token, redirect to login\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // This effect re-generates the password whenever the reference text changes\n  useEffect(() => {\n    if (referenceText.length > 0) {\n      generatePassword(referenceText);\n    } else {\n      setGeneratedPassword(\"\"); // Clear password if input is empty\n    }\n  }, [referenceText]);\n\n  // Leetspeak mapping\n  const leetMap = {\n    a: \"4\", e: \"3\", i: \"1\", o: \"0\", s: \"5\", t: \"7\",\n  };\n\n  // Function to generate the password from reference text\n  const generatePassword = (text) => {\n    let newPass = \"\";\n    // 1. Apply Leetspeak\n    for (let char of text.toLowerCase()) {\n      newPass += leetMap[char] || char;\n    }\n    // 2. Capitalize the first letter\n    if (newPass.length > 0) {\n      newPass = newPass.charAt(0).toUpperCase() + newPass.slice(1);\n    }\n    // 3. Remove spaces\n    newPass = newPass.replace(/\\s/g, \"\");\n    // 4. Append a common symbol and the current year\n    const currentYear = new Date().getFullYear();\n    newPass += `!${currentYear}`;\n\n    setGeneratedPassword(newPass);\n    setCopyMessage(\"\"); // Reset copy message\n  };\n  \n  // Function to copy password to clipboard\n  const copyToClipboard = () => {\n    if (!generatedPassword) return;\n    navigator.clipboard.writeText(generatedPassword);\n    setCopyMessage(\"Copied! ✅\");\n    setTimeout(() => setCopyMessage(\"\"), 2000);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\"); // clear token\n    navigate(\"/\"); // redirect to home\n  };\n\n  return (\n    <div style={{ padding: 24, fontFamily: \"system-ui, -apple-system, Segoe UI, Roboto, sans-serif\", maxWidth: 600, margin: \"auto\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <h1 style={{ marginTop: 0 }}>Premium: RefGenPass</h1>\n        <button\n          onClick={handleLogout}\n          style={{\n            padding: \"8px 12px\",\n            background: \"#dc2626\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: 6,\n            cursor: \"pointer\",\n            height: \"fit-content\"\n          }}\n        >\n          Logout\n        </button>\n      </div>\n      <p style={{ color: \"#6b7280\" }}>Enter a memorable phrase to generate a consistent, strong password.</p>\n      \n      {/* Reference Text Input */}\n      <div style={{ marginBottom: 16 }}>\n        <label htmlFor=\"reference\" style={{ display: \"block\", marginBottom: 6, fontWeight: 500 }}>Your Reference Phrase</label>\n        <input\n          id=\"reference\"\n          type=\"text\"\n          value={referenceText}\n          onChange={(e) => setReferenceText(e.target.value)}\n          placeholder=\"e.g., My dog's name is Buddy\"\n          style={{ width: \"100%\", boxSizing: \"border-box\", padding: \"12px\", border: \"1px solid #e5e7eb\", borderRadius: 6, fontSize: 16 }}\n        />\n      </div>\n\n      {/* Generated Password Display */}\n      <div>\n        <label style={{ display: \"block\", marginBottom: 6, fontWeight: 500 }}>Generated Password</label>\n        <div style={{ display: \"flex\", gap: 10 }}>\n          <input\n            type=\"text\"\n            value={generatedPassword}\n            readOnly\n            placeholder=\"Your password will appear here\"\n            style={{ flexGrow: 1, padding: \"10px 12px\", border: \"1px solid #e5e7eb\", borderRadius: 6, fontSize: 16, background: \"#f9fafb\" }}\n          />\n          <button \n            onClick={copyToClipboard}\n            style={{ padding: \"10px 16px\", background: \"#2563eb\", color: \"white\", border: \"none\", borderRadius: 6, cursor: \"pointer\" }}\n          >\n            {copyMessage ? copyMessage : \"Copy\"}\n          </button>\n        </div>\n      </div>\n\n      <Link to=\"/\" style={{ color: \"#2563eb\", display: \"inline-block\", marginTop: 24 }}>← Back to Home</Link>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}